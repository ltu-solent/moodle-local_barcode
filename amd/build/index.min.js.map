{"version":3,"sources":["../src/index.js"],"names":["define","$","str","cmid","link","code","message","assignment","assignmentdescription","course","duedate","idformat","studentid","studentname","submissiontime","submitted","islate","revert","ontime","hasReverted","strings","load","focus","document","getElementById","addEventListener","preventOnEnterSubmission","preventSubmission","cancelbutton","value","langStrings","get_strings","key","component","when","done","localizedStrings","createTable","submitBarcode","ev","stopPropagation","preventDefault","barcode","getBarcode","formIsValid","html","addClass","removeClass","saveBarcode","trim","resetBarcode","val","which","keyCode","setRevert","setOnTime","uploadUrl","ajax","type","url","data","success","response","faultCode","faultString","reverted","getAllowMultipleScans","resetRevert","resetOnTime","feedback","error","dataType","addTableRow","updateCounts","main","table","attr","thead","append","header","css","cssClass","colspans","arr","getData","tbody","row","i","cell","span","prepend","submissionClass","substring","outputBarcodeCount","count","outputSubmittedCount","checked","scanned","totalScanned","hasClass","applyErrorClass","submittedBarcodes","counter","increment","init","id","direct"],"mappings":"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","sourcesContent":["define(['jquery', 'core/str'], function($, str) {\n    // Initial variables.\n    var cmid,\n        link,\n        code,\n        message = '',\n        assignment = '-',\n        assignmentdescription = '',\n        course,\n        duedate,\n        idformat,\n        studentid,\n        studentname,\n        submissiontime,\n        submitted = 'Not Submitted',\n        islate,\n        revert = '0',\n        ontime = '0',\n        hasReverted = 0,\n        strings = [];\n\n    /**\n     * When the page loads then focus on the barcode input and listen for keypresses.\n     * Additionally, create the barcode table and set the web token\n     * @return {void}\n     */\n    function load() {\n        $('#id_barcode').focus();\n        document.getElementById('id_barcode').addEventListener('keypress', preventOnEnterSubmission, false);\n        document.getElementById('id_submitbutton').addEventListener('click', preventSubmission, false);\n        var cancelbutton = document.getElementById('id_cancel');\n        cancelbutton.value = \"Finish\";\n        // Removed as it's confusing when submissions are reverted to draft\n        // addCombinedCountElement();\n\n        var langStrings = str.get_strings([\n            { key: 'assignmentdetails', component: 'local_barcode' },\n            { key: 'barcodes', component: 'local_barcode' },\n            { key: 'draft', component: 'local_barcode' },\n            { key: 'draftandsubmissionerror', component: 'local_barcode' },\n            { key: 'due', component: 'local_barcode' },\n            { key: 'notsubmitted', component: 'local_barcode' },\n            { key: 'scanned', component: 'local_barcode' },\n            { key: 'student', component: 'local_barcode' },\n            { key: 'submitted', component: 'local_barcode' }\n        ]);\n\n        $.when(langStrings).done(function(localizedStrings) {\n            strings = localizedStrings;\n            createTable();\n        });\n    }\n\n    /**\n     * Submit the barcode and prevent the form from submitting to the server\n     * @param  {event} ev   The standard submit event\n     * @return {boolean}    Return false\n     */\n    function submitBarcode(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n\n        var barcode = getBarcode();\n\n        if (barcode && !formIsValid()) {\n            $('#feedback').html(strings[3]);\n            $('#feedback-group').addClass('local-barcode-has-inform');\n            $('#feedback-group').removeClass('local-barcode-has-danger');\n            $('#feedback-group').removeClass('local-barcode-has-success');\n        }\n        // Make the ajax call to the webservice.\n        if (barcode && formIsValid()) {\n            saveBarcode(barcode);\n        }\n        $('#id_barcode').focus();\n        return false;\n    }\n\n    /**\n     * Get the barcode entered into the text field\n     *\n     * @return {string}     the new entered barcode\n     */\n    function getBarcode() {\n        return document.getElementById('id_barcode').value.trim();\n    }\n\n    /**\n     * Reset the input text field to an empty value for the next entry\n     */\n    function resetBarcode() {\n        $('#id_barcode').val('');\n    }\n\n    /**\n     * Prevent the form from submmitting while the user is hitting enter during the\n     * process of entering more than one barcode\n     *\n     * @param  {object} ev      the keypress event\n     * @return {boolean}\n     */\n    function preventOnEnterSubmission(ev) {\n        var key = ev.which || ev.keyCode;\n        if (key === 13) {\n            ev.stopPropagation();\n            ev.preventDefault();\n            setRevert();\n            setOnTime();\n            submitBarcode(ev);\n        }\n        return false;\n    }\n\n    /**\n     * Prevent the form from submmitting while the user is submitting the form by interacting\n     * with the submit button\n     *\n     * @param  {object} ev   The submit event\n     * @return {boolean}\n     */\n    function preventSubmission(ev) {\n        ev.stopPropagation();\n        ev.preventDefault();\n        setRevert();\n        setOnTime();\n        submitBarcode(ev);\n        return false;\n    }\n\n    /**\n     * Prevent the user submitting the form if both revert to draft and allow late submission\n     * has been selected, you can't have both\n     * @return {boolean} Whether or not the form is valid\n     */\n    function formIsValid() {\n        if (revert !== '0' && ontime !== '0') {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Save the barcode to the database\n     * @param  {string} wstoken  The auth web token\n     * @param  {string} barcode  The barcode\n     * @return {void}\n     */\n    function saveBarcode(barcode) {\n        var uploadUrl = 'service/upload.php?barcode=';\n        if (link) {\n            uploadUrl = '../service/upload.php?barcode=';\n        }\n        $.ajax({\n            type: \"POST\",\n            url: uploadUrl + barcode + '&id=' + cmid + '&revert=' + revert + '&ontime=' + ontime,\n            data: {\n                barcode: barcode\n            },\n            success: function(response) {\n\n                if (typeof response.faultCode !== 'undefined') {\n                    code = response.faultString;\n                    message = response.faultString;\n                } else {\n                    code = response.code;\n                    message = response.message;\n                    assignment = response.assignment;\n                    assignmentdescription = response.assignmentdescription;\n                    course = response.course;\n                    duedate = response.duedate;\n                    idformat = response.idformat;\n                    studentid = response.studentid;\n                    studentname = response.studentname;\n                    submissiontime = response.submissiontime;\n                    islate = response.islate;\n                    hasReverted = response.reverted;\n\n                    if (!getAllowMultipleScans()) {\n                        resetRevert();\n                        resetOnTime();\n                    }\n                }\n                feedback();\n            },\n            error: function(response) {\n                message = 'Error';\n            },\n            dataType: \"json\"\n        });\n        // feedback();\n    }\n\n    /**\n     * Display the feedback message to the user\n     * @return {void}\n     */\n    function feedback() {\n        var feedback = $('#feedback');\n        feedback.html(message);\n        var error = 0;\n\n        if (code === 200) {\n            if (hasReverted === \"1\") {\n                submitted = strings[2];\n                $('#feedback-group').addClass('local-barcode-has-success');\n                $('#feedback-group').removeClass('local-barcode-has-danger');\n                $('#feedback-group').removeClass('local-barcode-has-inform');\n                addTableRow('revert');\n            } else {\n                submitted = strings[8];\n                $('#feedback-group').removeClass('local-barcode-has-danger');\n                $('#feedback-group').removeClass('local-barcode-has-inform');\n                $('#feedback-group').addClass('local-barcode-has-success');\n                addTableRow('success');\n            }\n        }\n\n        if (code === 404) {\n            assignment = '-';\n        }\n\n        if (code !== 200) {\n            submitted = strings[6];\n            $('#feedback-group').removeClass('local-barcode-has-success');\n            $('#feedback-group').removeClass('local-barcode-has-inform');\n            $('#feedback-group').addClass('local-barcode-has-danger');\n            addTableRow('fail');\n            error = 1;\n        }\n        resetBarcode();\n        updateCounts(error);\n    }\n\n    /**\n     * Create the barcode submissions table\n     */\n    function createTable() {\n        var main = $('#region-main');\n        var table = $('<table></table>');\n        table.attr('id', 'local-barcode-table');\n        table.addClass('generaltable');\n        table.addClass('local-barcode-table');\n\n        var thead = table.append('<thead></thead>');\n        var header = thead.append('<tr></tr>');\n        header.html('<th colspan=\"8\" class=\"local-barcode-th-left local-barcode-sm-hide\">' + strings[1] + ' - (<span id=\"id_count\">' +\n            '0</span> ' + strings[6] + ')</th>' +\n            '<th colspan=\"17\" class=\"local-barcode-th-center\">' + strings[0] + '</th>' +\n            '<th colspan=\"5\" class=\"local-barcode-th-right\">' + strings[8] + '(<span id=\"id_submit_count\">0</span>)</th>');\n        table.append('<tbody id=\"tbody\"></tbody>');\n\n        main.append(table);\n    }\n\n    /**\n     * Add a new row to the barcodes table\n     * @param {string} css  The css class condition\n     */\n    function addTableRow(css) {\n        var cssClass = 'bc-' + css;\n        var colspans = [8, 17, 5];\n        var arr = getData();\n        var tbody = $('#tbody');\n        var row = $('<tr></tr>');\n\n        for (var i = 0; i <= 2; i++) {\n            var cell = $('<td></td>');\n            var span = $('<span></span>');\n\n            cell.attr('colspan', colspans[i]);\n            span.html(arr[i]);\n            cell.append(span);\n            // Hide the first cell on small screens.\n            if (i === 0) {\n                cell.addClass('local-barcode-sm-hide');\n            }\n            if (i === 2) {\n                cssClass += ' local-barcode-td-position';\n                span.addClass('local-barcode-visuallyhidden');\n                cell.addClass(cssClass);\n            }\n            row.append(cell);\n        }\n        tbody.prepend(row);\n    }\n\n    /**\n     * Get the data for displaying in the table\n     * @return {array} The data in an array\n     */\n    function getData() {\n        var submissionClass = 'local-barcode-ontime';\n        if (islate) {\n            submissionClass = 'local-barcode-islate';\n        }\n        return [\n            getBarcode(),\n            assignment + '<br />' +\n            '<small>' + assignmentdescription.substring(0, 30) + '</small><br />' +\n            '<small>' + course + '</small><br />' +\n            '<small>' + strings[7] + ': ' + studentname + ' / ' + idformat + ': ' + studentid + '</small><br />' +\n            '<small>' + strings[4] + ': ' + duedate + '&nbsp; ' + strings[6] + ': <span class=\"' +\n            submissionClass + '\">' + submissiontime +\n            '</span></small><br />',\n            submitted\n        ];\n    }\n\n    /**\n     * Display the total number of scanned barcodes in the barcode table\n     * @return {void}\n     */\n    function outputBarcodeCount(count) {\n        $('#id_count').html(count);\n        $('#id_scanned_count').html(count);\n        return false;\n    }\n\n    /**\n     * Display the number of successfully submitted barcodes\n     * @return {void}\n     */\n    function outputSubmittedCount(count) {\n        $('#id_submit_count').html(count);\n        $('#id_submitted_count').html(count);\n        return false;\n    }\n\n    /**\n     * Checks whether or not the submission is to revert to draft or not\n     * @return {[type]} [description]\n     */\n    function setRevert() {\n        if (document.getElementById('id_reverttodraft').checked === true) {\n            revert = '1';\n        } else {\n            revert = '0';\n        }\n    }\n\n    /**\n     * Reset the revert to draft checkbox\n     * @return {void}\n     */\n    function resetRevert() {\n        document.getElementById('id_reverttodraft').checked = false;\n    }\n\n    function setOnTime() {\n        if (document.getElementById('id_submitontime') &&\n            document.getElementById('id_submitontime').checked === true) {\n            ontime = '1';\n        } else {\n            ontime = '0';\n        }\n    }\n\n    /**\n     * Reset the allow late submission checkbox\n     * @return {void}\n     */\n    function resetOnTime() {\n        document.getElementById('id_submitontime').checked = false;\n    }\n\n    /**\n     * Enable multiple scans at the same time\n     * @return boolean\n     */\n    function getAllowMultipleScans() {\n        return document.getElementById('id_multiplescans').checked;\n    }\n\n    /**\n     * Add the scanned and submitted counts next to the barcode input element\n     */\n    function addCombinedCountElement() {\n        $('#id_barcode').after(function() {\n            return '<span class=\"local-barcode-combined-counts local-barcode-inform\">(' +\n                '<span id=\"id_scanned_count\">0</span> / ' +\n                '<span id=\"id_submitted_count\">0</span>)' +\n                '</span>';\n        });\n    }\n\n    /**\n     * Update the submitted and scaned counts\n     * @param  {int} error Whether or not there was an error, 1 if there was\n     * @return {void}\n     */\n    function updateCounts(error) {\n        var submitted,\n            scanned = totalScanned();\n        if (error === 1 && !$('#id_submitted_count').hasClass('local-barcode-error')) {\n            applyErrorClass();\n        }\n        if (error === 0) {\n            submitted = submittedBarcodes();\n            outputSubmittedCount(submitted);\n        }\n        if (!$('#id_scanned_count').hasClass('local-barcode-success')) {\n            $('#id_scanned_count').addClass('local-barcode-success');\n        }\n        outputBarcodeCount(scanned);\n    }\n\n    /**\n     * Apply the error class to the #id_submitted_count element if a barcode is not submitted\n     * @return {void}\n     */\n    function applyErrorClass() {\n        $('#id_submitted_count').addClass('local-barcode-error');\n    }\n\n    // Closure to calculate the total number of scanned barcodes\n    // @return {counter}   Returns the number of times all barcodes have been scanned.\n    var totalScanned = (function() {\n        var counter = 0;\n        // Increment the counter.\n        function increment() {\n            counter += 1;\n        }\n        // Return the updated counter value.\n        return function() {\n            increment();\n            return counter;\n        };\n    })();\n\n    // Calculate the number of submitted barcodes\n    // Return the number of times a barcode has been submitted.\n    // A submitted barcode will only be submitted if it's a valid barcode.\n    // @return {counter}.\n    var submittedBarcodes = (function() {\n        var counter = 0;\n        // Increment the counter.\n        function increment() {\n            counter += 1;\n        }\n        // Return the updated counter value.\n        return function() {\n            increment();\n            return counter;\n        };\n    })();\n\n    /**\n     * On initialisation call the load function and set the course module id and the type of url to use on ajax call.\n     */\n    return {\n        init: function(id, direct) {\n            load();\n            cmid = id;\n            link = direct;\n        },\n    };\n});"],"file":"index.min.js"}